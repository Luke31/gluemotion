name: lint-test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements.dev.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest
    - name: Test with pytest
      run: pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}
  coverage-python:
    needs: [ test ]
    name: coverage-python
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements.dev.txt
    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.6.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: pytest
    - name:
      run: pytest
    - name: Upload built function.zip result for deployment
      uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: coverage.xml
  coverage-java:
    needs: [ coverage-python ]
    name: coverage-java
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Download function.zip from previous build job
      uses: actions/download-artifact@v1
      with:
        name: coverage
        path: .
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and test
      run: |
        cd java-artifact
    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.6.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        JACOCO_SOURCE_PATH: "${{github.workspace}}/java-artifact/src/main/java"
      with:
        coverageCommand: mvn clean install
        coverageLocations: ${{github.workspace}}/java-artifact/target/site/jacoco/jacoco.xml:jacoco
    - name: Coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn sonar:sonar \
        -Dsonar.projectKey=Luke31_gluemotion \
        -Dsonar.organization=luke31 \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.python.coverage.reportPaths=./coverage.xml \
        -Dsonar.sources=. \
        -Dsonar.test.exclusions=pom.xml,"file:**/test/**"
